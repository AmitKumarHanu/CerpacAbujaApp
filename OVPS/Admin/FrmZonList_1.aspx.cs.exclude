using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.Xml;

public partial class Admin_FrmZonList : System.Web.UI.Page
{
    #region "Declarations"
    //Session Holder  for Persisting Data Class Object intialization
    BaseLayer.SessionHolderPersistingData objectSessionHolderPersistingData = null;
    #endregion
    BusinessEntityLayer.BalZonDetails objBalZonDetail = null;
    BaseLayer.General_function ObjGenBal = null;

    protected void Page_PreInit(object sender, EventArgs e)
    {
        objectSessionHolderPersistingData = (BaseLayer.SessionHolderPersistingData)HttpContext.Current.Session["SessionHolderPersistingData"];
        if (objectSessionHolderPersistingData == null)
        {
            Response.Redirect("../Login.aspx");
        }
        string companyid = objectSessionHolderPersistingData.CompanyId;
        if (companyid == "0")

            this.Page.MasterPageFile = "~/MasterPage/MasterPageCompany.master";
        else
            this.Page.MasterPageFile = "~/MasterPage/MasterPageUser.master";
    }

    protected void Page_Load(object sender, EventArgs e)
    {
        objBalZonDetail = new BusinessEntityLayer.BalZonDetails();
        ObjGenBal = new BaseLayer.General_function();
        objectSessionHolderPersistingData = (BaseLayer.SessionHolderPersistingData)HttpContext.Current.Session["SessionHolderPersistingData"];
        ////////////////////////////////////////////////////////
        Response.Cache.SetCacheability(HttpCacheability.NoCache);
        Response.Cache.SetExpires(DateTime.Now.AddDays(-1));
        Response.Cache.SetNoStore();
        if (Request.Cookies.Count > 0)
        {
            //HttpCookie cookie = Request.Cookies["ASPXAUTH"];
            //cookie.Expires = DateTime.Now.AddYears(-10);
            //Response.AppendCookie(cookie);
        }
        ///////////////////////////////////////////////////////

        Label LabelMessage = (Label)this.Page.Master.FindControl("lblmsg");
        LabelMessage.CssClass = "";
        LabelMessage.Text = "";

        if (!IsPostBack)
        {
            BindGrid();
            if (Session["Status"] != null)
            {
                LabelMessage.CssClass = "successmsg";
                LabelMessage.Text = Session["Status"].ToString();
                Session["Status"] = null;

            }
             BtnAccessibilty();
        }
       
    }

    public void BtnAccessibilty()
    {        
        DataTable DT = new DataTable();
        DT = ObjGenBal.TbBtnaccess(ENUMFORMCODE.Zonemaster.GetHashCode().ToString(), objectSessionHolderPersistingData.User_ID);

        if (DT.Rows[0][2].ToString() == "N")
            btnAdd.Visible = false;
        if (DT.Rows[0][3].ToString() == "N")
        {
            GridViewZonList.Columns[5].Visible = false;            
            
        }
        if (DT.Rows[0][5].ToString() == "N")
            GridViewZonList.Columns[6].Visible = false;  
       

    }
       
    protected void BindGrid()
    {        
        DataSet ds = new DataSet();
           
        try
        {
            ds = objBalZonDetail.GetZoneList();

            GridViewZonList.DataSource = ds;
            GridViewZonList.DataBind();

         }
        catch (Exception ex)
        {
            Label LabelMessage = (Label)this.Page.Master.FindControl("lblmsg");
            LabelMessage.CssClass = "errormsg";
            LabelMessage.Text = "Please contact to System Administrator; Error message is: " + ex.Message.ToString();

        }
        finally
        {
            objBalZonDetail = null;
            ds = null;
        }
    }

    protected void GridViewZonList_RowEditing(object sender, GridViewEditEventArgs e)
    {
        GridViewZonList.EditIndex = e.NewEditIndex;

        Label labelZonCode = (Label)GridViewZonList.Rows[GridViewZonList.EditIndex].FindControl("lblZonCode");

        string keyvalue = labelZonCode.Text.ToString();
        Session["Mode"] = "update";
        Session["id"] = keyvalue;
        Response.Redirect("FrmZonmaster.aspx");
        
    }

    protected void GridViewZonList_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        string keyvalue;
        string Message = "";
        keyvalue = GridViewZonList.DataKeys[e.RowIndex].Value.ToString().Trim();
        Label labelZonCode = (Label)GridViewZonList.Rows[e.RowIndex].FindControl("lblZonCode");
        Label labelZonName = (Label)GridViewZonList.Rows[e.RowIndex].FindControl("lblZonName");
        
  
        Label LabelMessage = (Label)this.Page.Master.FindControl("lblmsg");
        try
        {                   
            

            //Call the Delete method of business layer
            int StatusId = objBalZonDetail.DeleteDataRow(keyvalue);
            Message = getXmlMessage(Convert.ToInt32(ENUMFORMCODE.Zonemaster.GetHashCode()), StatusId, "delete");
            if (StatusId == 1)
            {
                ObjGenBal.audittype = ENUMAUDITTYPE.ZonDeleted.GetHashCode().ToString();
                ObjGenBal.userid = objectSessionHolderPersistingData.User_ID;
                ObjGenBal.auditdetail = "Zone '" + labelZonName.Text + "(ID:" + labelZonCode.Text + ")' Deleted";
                ObjGenBal.machineIP = Request.UserHostAddress.ToString();
                ObjGenBal.AuditInsert();
                LabelMessage.CssClass = "successmsg";
                LabelMessage.Text = Message;//"Record Successfully Deleted";
               
                BindGrid();

            }
            else
            {
                Message = getXmlMessage(Convert.ToInt32(ENUMFORMCODE.Zonemaster.GetHashCode()), 0, "delete");
                LabelMessage.CssClass = "errormsg";
               //    LabelMessage.Text = Message;//"Record can not be Deleted! Please try again";

            }

        }
        catch (Exception ex)
        {
            LabelMessage.CssClass = "errormsg";
            LabelMessage.Text = "Please contact to System Administrator; Error message is: " + ex.Message.ToString(); ;
        }
        finally
        {
            objBalZonDetail = null;
        }
    }

    protected void GridViewZonList_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {

        GridViewZonList.PageIndex = e.NewPageIndex;
        BindGrid();
    }

    protected void btnAdd_Click(object sender, ImageClickEventArgs e)
    {
        Session["Mode"] = "insert";
        Response.Redirect("FrmZonmaster.aspx");
    }

    public string getXmlMessage(int FormID, int ErrorID, string Mode)
    {
        string errormessage = string.Empty;
        string XMLPath = Server.MapPath(System.Configuration.ConfigurationManager.AppSettings["XMLPath"].ToString()) + "Error.xml";
        XmlDocument xd = new XmlDocument();

        //xd.Load(@"D:\Projects\OVPS\OVPS\Error.xml");
        xd.Load(XMLPath);
        XmlNodeList FormList = xd.SelectNodes("/RootMessage/form");
        foreach (XmlNode FormNode in FormList)
        {
            if (Convert.ToInt32(FormNode.Attributes["id"].Value) == FormID)
            {
                foreach (XmlNode Errornode in FormNode.ChildNodes)
                {
                    if (Convert.ToInt32(Errornode.Attributes["id"].Value) == ErrorID && Errornode.Attributes["mode"].Value == Mode)
                    {
                        errormessage = Errornode.InnerText;
                        return errormessage;
                    }
                }
            }
        }
        errormessage = FormList[0].ParentNode.ChildNodes[0].InnerText;
        return errormessage;
    }
    protected void GridViewZonList_SelectedIndexChanged(object sender, EventArgs e)
    {

    }
}
 