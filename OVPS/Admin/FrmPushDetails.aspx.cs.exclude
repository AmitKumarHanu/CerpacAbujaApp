using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Data.SqlClient;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Text.RegularExpressions;
using System.Net.Mail;
//using Microsoft.Reporting.WebForms;
using System.Xml.Linq;
using System.Drawing.Imaging;
using System.Collections.Generic;
using DataAccessLayer;
using System.Globalization;
using System.Text;
using System.Net;
using System.Windows;
using SHDocVw;
using System.Drawing.Drawing2D;
using System.Threading;

public partial class Admin_FrmPushDetails : System.Web.UI.Page
{
    #region "Declarations"
    //Session Holder  for Persisting Data Class Object intialization
    BaseLayer.SessionHolderPersistingData objectSessionHolderPersistingData = null;
    BusinessEntityLayer.BalApprovalReviewL1 ObjbalApporvalL1 = null;
    protected BaseLayer.General_function ObjGenBal = null;
    string AppID = "";
    string FRNno = "";
    string type = "";
    //string drpdwn = "";
    string LogoPath1 = "";
    string UserID = null;
    int Length = 0;
    byte[] Content;

    #endregion
    protected void Page_Load(object sender, EventArgs e)
    {
        objectSessionHolderPersistingData = (BaseLayer.SessionHolderPersistingData)HttpContext.Current.Session["SessionHolderPersistingData"];
        if (objectSessionHolderPersistingData == null)
        {
            Response.Redirect("../Login.aspx");
        }

        if (Session["company_id"] != null)
        {
            if (Session["company_id"].ToString() != "")
            {

                txtcompid.Text = Session["company_id"].ToString();
                Session["company_id"] = "";
            }
        }

        if (Session["company_name"] != null)
        {
            if (Session["company_name"].ToString() != "")
            {
                txtcompname.Text = Session["company_name"].ToString();
                txtcompname.ToolTip = Session["company_name"].ToString();
                Session["company_name"] = "";
            }
        }

        UserID = objectSessionHolderPersistingData.User_ID.ToString();
        Label LabelMessage = (Label)this.Page.Master.FindControl("lblmsg");
        //-----------------------------------------for disabling the hyperlink ------------------------------
        TreeView tvr = (TreeView)this.Page.Master.FindControl("TVLeftMenu");
        tvr.Visible = false;
        HyperLink hyp = (HyperLink)this.Page.Master.FindControl("hypHome");
        hyp.Attributes.Add("onclick", "if(!confirm('Are you sure you want to go to home page')) return false;");
        //-----------------------------------------------end ---------------------------------------------------
        if (string.IsNullOrEmpty(Request.QueryString["no"]) == false && Request.QueryString["no"] != "")
        {
            AppID = Convert.ToString(Request.QueryString["no"]);
            //drpdwn = Convert.ToString(Request.QueryString["dpr"]);
        }
        if (!IsPostBack)
        {
            btnUploadCancel.Visible = false;
            ViewState["imagepath"] = null;
            if (string.IsNullOrEmpty(Request.QueryString["no"]) == false && Request.QueryString["no"] != "")
            {
                GetData(AppID);
                // GetComments(AppID);

                A1.HRef = "javascript:NewCal('" + TxtDateOfIssue.ClientID + "','DDMMMYYYY','','',20,1)";
                doe.HRef = "javascript:NewCal('" + txtdoe.ClientID + "','DDMMMYYYY','','',1,10)";
                A2.HRef = "javascript:NewCal('" + TxtIssueDate.ClientID + "','DDMMMYYYY','','',5,5)";
                A3.HRef = "javascript:NewCal('" + TxtExpDate.ClientID + "','DDMMMYYYY','','',5,5)";
                A4.HRef = "javascript:NewCal('" + TxtDob.ClientID + "','DDMMMYYYY','','',78,1)";
                A5.HRef = "javascript:NewCal('" + txtdtemploymnt.ClientID + "','DDMMMYYYY','','',53,1)";
                binddrpdwn();
            }
        }
    }

    protected void binddrpdwn()
    {
        ObjGenBal = new BaseLayer.General_function();
        string query = "select distinct(forename +''+ surname+'----'+cerpac_no) as Name,people_id from People";
      //  ObjGenBal.Fill_DDL(drpdpndt, query, "Name", "people_id");

        string query2 = "Select * from DesignationMaster";
       // ObjGenBal.Fill_DDL(drprltn, query2, "Designation", "DesignationCode");

        string queryfortitle = "Select * from TitleMaster";
        ObjGenBal.Fill_DDL(drptitle, queryfortitle, "Title", "TitleCode");

        string queryfornationality = "Select * from NationalityMaster";
        ObjGenBal.Fill_DDL(TxtNationality, queryfornationality, "adjective", "adjective");
    }

    private void GetData(string ApplicationId)
    {
        //----------------------------------------------------------------- data from db------------------------------------------------------

        Session["CerpaxNo"] = AppID.ToString().Trim();
        if (AppID.Substring(0, 2) == "AO")
        {
            lbl_comp_rc.Visible = true;
            txtcompid.Visible = true;
        }
        else
        {
            lbl_comp_rc.Visible = false;
            txtcompid.Visible = false;
        }

        DataTable Dt = null;
        Dt = new DataTable();
        DataTable dtcomp = null;
        dtcomp = new DataTable();
        ObjGenBal = new BaseLayer.General_function();
        string queryforcerpac = "select * from Cardholder where cerpac_no='" + ApplicationId.ToString() + "'";
        Dt = ObjGenBal.FetchData(queryforcerpac);
        if (Dt.Rows.Count > 0)
        {

           byte[] picData = Dt.Rows[0]["photograph"] as byte[] ?? null;
            System.Drawing.Image newImage;

            if (picData != null)
            {
                using (MemoryStream ms = new MemoryStream(picData))
                {
                    // Load the image from the memory stream. How you do it depends
                    // on whether you're using Windows Forms or WPF.
                    // For Windows Forms you could write:
                    // System.Drawing.Bitmap bmp = new System.Drawing.Bitmap(ms);

                    newImage = System.Drawing.Image.FromStream(ms);

                    if (!File.Exists(Server.MapPath("~") + "/Images/Logo/" + ApplicationId+".jpg"))
                        newImage.Save(Server.MapPath("~") + "/Images/Logo/" + ApplicationId + ".jpg");
                    // newImage.Save("g:/Saurabh" + Dt.Rows[0]["picture"].ToString().Trim());

                }
            }


            ViewState["imagepath"] = ApplicationId + ".jpg";
            if (ViewState["imagepath"] != null || ViewState["imagepath"] != "")
            {
                btnUploadCancel.Visible = true;
                btnUploadPhoto.Visible = false;
                logobrowse.Visible = false;
                if (File.Exists(Server.MapPath("~") + "/Images/Logo/" + ApplicationId + ".jpg"))
                    ImgPhoto.ImageUrl = "~/Images/Logo/" + ApplicationId + ".jpg";

                else
                    ImgPhoto.ImageUrl = "~/Images/Logo/default_logo.gif";
            }

            else
            {
                ImgPhoto.ImageUrl = "~/Images/Logo/default_logo.gif";

            }




            TxtPassportNo.Text = Dt.Rows[0]["passport_no"].ToString().Trim();
            TxtPassportType.Text = Dt.Rows[0]["passport_issue_by"].ToString().Trim();
            TxtDateOfIssue.Text = string.Format("{0:d-MM-yyyy}", Dt.Rows[0]["passport_issue_date"]).ToString().Trim();
            txtdoe.Text = string.Format("{0:d-MM-yyyy}", Dt.Rows[0]["passport_expiry_date"]).ToString().Trim();
            TxtPlaceOfIssue.Text = Dt.Rows[0]["passport_issue_loc"].ToString().Trim();
            TxtFirstName.Text = Dt.Rows[0]["forename"].ToString().Trim();
            TxtMiddleName.Text = Dt.Rows[0]["middle_name"].ToString().Trim();
            TxtLastName.Text = Dt.Rows[0]["surname"].ToString().Trim();
            txtcompid.Text = Dt.Rows[0]["company"].ToString().Trim();
            //TxtNationality.Text = Dt.Rows[0]["nationality"].ToString().Trim();
            //--------------------------------------fetching company name from comp master-------------------------------
            string queryforcomp = "";
            if (AppID.Substring(0, 2) == "AO")
            {
                queryforcomp = "Select regno,company from compmaster where regno = '" + Dt.Rows[0]["company"].ToString().Trim() + "'";
            }
            else
            {
                queryforcomp = "Select regno,company from CompMasterForARCR where regno = '" + Dt.Rows[0]["company"].ToString().Trim() + "'";
            }



            //  string queryforcomp = "Select company from compmaster where regno='" + Dt.Rows[0]["company"].ToString().Trim() + "'";
            ObjGenBal = new BaseLayer.General_function();
            dtcomp = ObjGenBal.FetchData(queryforcomp);
            if (dtcomp.Rows.Count > 0)
            {
                txtcompname.Text = dtcomp.Rows[0]["company"].ToString().Trim();
                txtcompname.ToolTip = dtcomp.Rows[0]["company"].ToString().Trim();

            }
            else
            {
                txtcompid.Text = "";
                txtcompname.Text = "";
            }
            //-----------------------------------------------------------------end----------------------------------------

            txtcompadd1.Text = Dt.Rows[0]["company_add_1"].ToString().Trim();
            txtcompadd2.Text = Dt.Rows[0]["company_add_2"].ToString().Trim();
            txtdesig.Text = Dt.Rows[0]["designation"].ToString().Trim();
            txtphno.Text = Dt.Rows[0]["company_tel_no"].ToString().Trim();
            txtfaxno.Text = Dt.Rows[0]["company_fax_no"].ToString().Trim();
            txtfileno.Text = FRNno.ToString();
            txtemailprsn.Text = Dt.Rows[0]["Email"].ToString().Trim();
           // txtcntcnoprsn.Text = Dt.Rows[0]["ContactNo"].ToString().Trim();
            radsex.SelectedValue = Dt.Rows[0]["sex"].ToString().Trim();
            TxtCerpacNo.Text = Dt.Rows[0]["cerpac_no"].ToString().Trim();
           // TxtFirstNamedb.Text = Dt.Rows[0]["forename"].ToString().Trim(); ;
            //TxtLastNamedb.Text = Dt.Rows[0]["surname"].ToString().Trim();
            //TxtNationalitydb.Text = Dt.Rows[0]["nationality"].ToString().Trim();
            //---------------------------------------------new changes---------------------------------------------
           // drptitle.SelectedValue = Dt.Rows[0]["title"].ToString().Trim();
            txtpob.Text = Dt.Rows[0]["place_of_birth"].ToString().Trim();
            txtdtemploymnt.Text = string.Format("{0:d-MM-yyyy}", Dt.Rows[0]["employment_date"]).ToString().Trim();
            TxtDob.Text = string.Format("{0:d-MM-yyyy}", Dt.Rows[0]["date_of_birth"]).ToString().Trim();
            txtaddrnigeria1.Text = Dt.Rows[0]["nigeria_add_1"].ToString().Trim();
            txtaddrnigeria2.Text = Dt.Rows[0]["nigeria_add_2"].ToString().Trim();
            txtaddrabroad1.Text = Dt.Rows[0]["abroad_add_1"].ToString().Trim();
            txtaddrabroad2.Text = Dt.Rows[0]["abroad_add_2"].ToString().Trim();
            //------------------------------------------------end--------------------------------------------------
            if (Dt.Rows[0]["cerpac_receipt_date"].ToString().Trim() != null || Dt.Rows[0]["cerpac_receipt_date"].ToString().Trim() != "")
            {
                if (type == "1")
                {
                    string queryforpurchase = "Select * from Uploaded_excel_data where FORMNO='" + txtfileno.Text.ToString().Trim() + "'";
                    DataTable dtprchse = null;
                    dtprchse = new DataTable();
                    dtprchse = ObjGenBal.FetchData(queryforpurchase);
                    if (dtprchse.Rows.Count > 0)
                    {
                        TxtIssueDate.Text = string.Format("{0:d-MM-yyyy}", dtprchse.Rows[0]["Date1"]).ToString().Trim();
                        //txt_purchase_date.Text = string.Format("{0:d-MM-yyyy}", dtprchse.Rows[0]["Date1"]).ToString().Trim();
                    }
                }
                else
                {
                    TxtIssueDate.Text = string.Format("{0:d-MM-yyyy}", Dt.Rows[0]["cerpac_expiry_date"]).ToString().Trim();
                    //TxtExpDate.Text = string.Format("{0:d-MM-yyyy}", Dt.Rows[0]["cerpac_expiry_date"]).ToString().Trim();
                }
            }
            else
            {
                TxtIssueDate.Text = "-----";
                TxtExpDate.Text = "-----";
            }
        }
        else
        {
            detailtable.Style.Add("display", "none");
            warn.Style.Add("display", "");
        }
        //---------------------------------------------------------end----------------------------------------------------------------------
        //----------------------------------------------------------for generating documents-------------------------------------
        //string cerpactype = FRNno.ToString().Trim().Substring(0, 2);
        //getdocuments(cerpactype);
        //------------------------------------------------------------------end--------------------------------------------------
       
    }

    public static string ConvertDate(string date, string pattern)
    {

        if (string.IsNullOrEmpty(date) == false && date != "")
        {
            DateTime date2;
            if (DateTime.TryParseExact(date, pattern, CultureInfo.InvariantCulture, DateTimeStyles.None, out date2))
            {
                return date2.ToString("MM/d/yyyy");
            }
            else
            {
                return "";
            }
        }
        else
        {
            return "";
        }
    }

    protected void btnverify_Click(object sender, EventArgs e)
    {
        CultureInfo c = Thread.CurrentThread.CurrentCulture;
        TextInfo textInfo = c.TextInfo;
        
        //---------------------------------------------------- for checking the expiry date of the cerpac form ------------------------------------------------- 
        DateTime d1 = Convert.ToDateTime(ConvertDate(TxtIssueDate.Text.ToString(), "d-MM-yyyy"));
        DateTime d2 = Convert.ToDateTime(ConvertDate(TxtExpDate.Text.ToString(), "d-MM-yyyy"));
        string d3 = (d2 - d1).TotalDays.ToString();
        // Response.Write("<script>alert('" + d3.ToString() + "')</script>");
        if ((TxtCerpacNo.Text.ToString().ToUpper().Substring(0, 2) == "AO" || TxtCerpacNo.Text.ToString().ToUpper().Substring(0, 2) == "CR") && int.Parse(d3) > 365)
        {
            Response.Write("<script>alert('Cerpac Expiry Date should be less than or equal to one year from issue date')</script>");
            return;
        }
        if (TxtCerpacNo.Text.ToString().ToUpper().Substring(0, 2) == "AR" && int.Parse(d3) > 1464)
        {
            Response.Write("<script>alert('Cerpac Expiry Date for AR category should be less than or equal to four years from issue date')</script>");
            return;
        }

        //----------------------------------------------------------------- end---------------------------------------------------------- 

        // System.Threading.Thread.Sleep(5000);
        if (ViewState["imagepath"] == null)
        {
            Response.Write("<script>alert('You have not uploaded picture')</script>");
            return;
        }
        if (ViewState["imagepath"].ToString().Trim() == "" || ViewState["imagepath"] == null)
        {
            Response.Write("<script>alert('You have not uploaded picture')</script>");
            return;
        }
        ObjbalApporvalL1 = new BusinessEntityLayer.BalApprovalReviewL1();
        
        int status=insertcerpac();
        //=================================== for inserting dependent================================================
        SqlParameter[] pram = null;
        pram = new SqlParameter[16];
        pram[0] = new SqlParameter("@isdependent", "0");
        //  pram[1] = new SqlParameter("@dependenton", drpdpndt.SelectedValue.ToString());
        pram[1] = new SqlParameter("@dependenton", "");
        pram[2] = new SqlParameter("@dependentrelation", "");
        pram[3] = new SqlParameter("@CerpacNo", TxtCerpacNo.Text.ToString().Trim());
        pram[4] = new SqlParameter("@issuedate", ConvertDate(TxtIssueDate.Text.ToString(), "d-MM-yyyy"));
        pram[5] = new SqlParameter("@expirydate", ConvertDate(TxtExpDate.Text.ToString(), "d-MM-yyyy"));
        pram[6] = new SqlParameter("@ImagePath", ViewState["imagepath"].ToString());
        //------------------------------------new fields---------------------------------------
        pram[7] = new SqlParameter("@title", drptitle.SelectedValue.ToString());
        pram[8] = new SqlParameter("@placebirth", txtpob.Text.ToString());
        pram[9] = new SqlParameter("@fileno", txtphyfileno.Text.ToString());
        pram[10] = new SqlParameter("@dtemp", ConvertDate(txtdtemploymnt.Text.ToString(), "d-MM-yyyy"));
        pram[11] = new SqlParameter("@nigadd1", textInfo.ToTitleCase(txtaddrnigeria1.Text.ToString()));
        pram[12] = new SqlParameter("@nigadd2", textInfo.ToTitleCase(txtaddrnigeria2.Text.ToString()));
        pram[13] = new SqlParameter("@abdadd1", textInfo.ToTitleCase(txtaddrabroad1.Text.ToString()));
        pram[14] = new SqlParameter("@abdadd2", textInfo.ToTitleCase(txtaddrabroad2.Text.ToString()));
        pram[15] = new SqlParameter("@DOB", ConvertDate(TxtDob.Text.ToString(), "d-MM-yyyy"));

        //-------------------------------------- end------------------------------------------------------
        //pram[4] = new SqlParameter("@cerpac_file_no", txtfileno.Text.ToString());
        SqlHelper.ExecuteNonQuery(AppSetting.ActivateConnection, CommandType.StoredProcedure, "USP_CERPAC_DEPENDENCE_UPDATE", pram);
        //========================================end========================================

        /************* Insert Image in DB **************/

        byte[] data = null;
        FileInfo fInfo = new FileInfo(Server.MapPath(System.Configuration.ConfigurationManager.AppSettings["LogoUrl"].ToString()) + ViewState["imagepath"].ToString());
        Length = System.Convert.ToInt32(fInfo.Length);
        byte[] Content = new byte[Length];
        /// <summary>
        /// The Read method is used to read the file from the ImageToUpload control </summary>
        //int Content1=ImageToUpload.PostedFile.InputStream.Read(Content,0,Length);
        long numBytes = fInfo.Length;
        FileStream fStream = new FileStream(Server.MapPath(System.Configuration.ConfigurationManager.AppSettings["LogoUrl"].ToString()) + ViewState["imagepath"].ToString(), FileMode.Open, FileAccess.Read);
        BinaryReader br = new BinaryReader(fStream);
        data = br.ReadBytes((int)numBytes);


        SqlConnection Connection = new SqlConnection();
        Connection.ConnectionString = ConfigurationManager.ConnectionStrings["NigeriaConnectionString"].ConnectionString;
        SqlCommand Command = new SqlCommand("update people set userImage=@ImageFile where cerpac_no='" + TxtCerpacNo.Text + "'", Connection);

        SqlParameter imageFileParameter = new SqlParameter("@ImageFile", SqlDbType.Image);
        // imageFileParameter.Value = ViewState["contentImg"];
        imageFileParameter.Value = data;
        Command.Parameters.Add(imageFileParameter);
        Connection.Open();
        /// <summary>
        /// The SQL statement is executed. ExecuteNonQuery is used since no records
        /// will be returned. </summary>
        Command.ExecuteNonQuery();
        /// <summary>
        /// The connection is closed </summary>
        Connection.Close();
        /************* End Insert Image in DB **********/
        if (status == 1)
        {
            confirm.Style.Add("display", "");
            confirm.Attributes.Add("class", "confirmation-box animated-table bounceIn");
            detailtable.Style.Add("display", "none");
            gridtable.Style.Add("display", "none");
            imgbak.Style.Add("display", "none");
            btnUploadCancel.Visible = false;
           
        }


    }

    public int insertcerpac()
    {
        SqlParameter[] pram = null;
        try
        {
            CultureInfo c = Thread.CurrentThread.CurrentCulture;
        TextInfo textInfo = c.TextInfo;
            
            //Adding the parameters of Insertion stored procedure.
            pram = new SqlParameter[24];
            pram[0] = new SqlParameter("@passportissueby",textInfo.ToTitleCase(TxtPassportType.Text.ToString()));
            pram[1] = new SqlParameter("@dateofissuep", ConvertDate(TxtDateOfIssue.Text.ToString(), "d-MM-yyyy"));
            pram[2] = new SqlParameter("@dateofexpp", ConvertDate(txtdoe.Text.ToString(), "d-MM-yyyy"));
            pram[3] = new SqlParameter("@placeissuep", textInfo.ToTitleCase(TxtPlaceOfIssue.Text.ToString()));
            pram[4] = new SqlParameter("@companyname", txtcompname.Text.ToString());
            pram[5] = new SqlParameter("@companyadd1", textInfo.ToTitleCase(txtcompadd1.Text.ToString()));
            pram[6] = new SqlParameter("@companyadd2", textInfo.ToTitleCase(txtcompadd2.Text.ToString()));
            pram[7] = new SqlParameter("@designation", textInfo.ToTitleCase(txtdesig.Text.ToString()));
            pram[8] = new SqlParameter("@comptelno", txtphno.Text.ToString());
            pram[9] = new SqlParameter("@compfaxno", txtfaxno.Text.ToString());
            pram[10] = new SqlParameter("@emailprsn", txtemailprsn.Text.ToString());
            pram[11] = new SqlParameter("@contactprsn", txtcntcnoprsn.Text.ToString());
            pram[12] = new SqlParameter("@cerpacno", TxtCerpacNo.Text.ToString());
            pram[13] = new SqlParameter("@companyid", txtcompid.Text.ToString());
            pram[14] = new SqlParameter("@UserId", objectSessionHolderPersistingData.User_ID);
            pram[15] = new SqlParameter("@zonenote", "");
            pram[16] = new SqlParameter("@fname", textInfo.ToTitleCase(TxtFirstName.Text.ToString()));
            pram[17] = new SqlParameter("@lname",textInfo.ToTitleCase(TxtLastName.Text.ToString()));
            pram[18] = new SqlParameter("@mname", textInfo.ToTitleCase(TxtMiddleName.Text.ToString()));
            pram[19] = new SqlParameter("@nationality", TxtNationality.SelectedValue.ToString());
            pram[20] = new SqlParameter("@passportno", TxtPassportNo.Text.ToString());
            pram[21] = new SqlParameter("@sex", radsex.SelectedValue.ToString());
            pram[22] = new SqlParameter("@fileno", txtfileno.Text.ToString().Trim());
            pram[23] = new SqlParameter("@SuccessId", 1);
            pram[23].Direction = ParameterDirection.Output;
            SqlHelper.ExecuteNonQuery(AppSetting.ActivateConnection, CommandType.StoredProcedure, "USP_CERPAC_DATA_INSERT", pram);
            return int.Parse(pram[23].Value.ToString());

        }
        catch (Exception ex)
        {
            throw (ex);
        }
        finally
        {
            pram = null;

        }
    }
   
   protected void btnAppliHist_Click(object sender, EventArgs e)
    {
        this.ClientScript.RegisterClientScriptBlock(this.GetType(), "Onclick", "<script>window.open('viewAppliHistIssue.aspx?AppID=" + TxtCerpacNo.Text.ToString() + "','PaperVisa','menubar=no,status=yes,Width=1000,Height=1020,top=50,left=5,scrollbar=yes');</script>");

    }

   protected void btnUploadPhoto_Click(object sender, EventArgs e)
   {

       objectSessionHolderPersistingData = (BaseLayer.SessionHolderPersistingData)HttpContext.Current.Session["SessionHolderPersistingData"];
       ObjGenBal = new BaseLayer.General_function();

       //FOR PHOTO PART       
       string FileName = null;
       string FileNameWithoutExt = null;
       double FileSize;
       string LogoFileExtension = "";
       int ImgHeight = 0;
       int Imgwidth = 0;

       string LogoPath = Server.MapPath(System.Configuration.ConfigurationManager.AppSettings["LogoPath2"].ToString());
       //FOR PHOTO PART

       if (TxtCerpacNo.Text.ToString() == string.Empty)
       {
           //    LabelMessage.CssClass = "errormsg";
           //    LabelMessage.Text = "Please enter passport number and nationality before browsing and uploading photo";
           Response.Write("<script>alert('Please enter Cerpac No First')</script>");
           return;
       }
       //checking for Photo??
       if (logobrowse.HasFile)
       {
           HttpPostedFile myfile = null;
           int ExtCheck = 0;
           myfile = logobrowse.PostedFile;

           LogoFileExtension = Path.GetExtension(myfile.FileName);

           FileName = Path.GetFileName(myfile.FileName);


           FileNameWithoutExt = Path.GetFileNameWithoutExtension(myfile.FileName);
           FileSize = myfile.ContentLength; // in bytes
           string ValidLogoExt = System.Configuration.ConfigurationManager.AppSettings["ValidlogoExtensions"].ToString();
           double Maxsize = Convert.ToDouble(System.Configuration.ConfigurationManager.AppSettings["MaxLogoSize"]);
           double MaxLogoHeight = Convert.ToDouble(System.Configuration.ConfigurationManager.AppSettings["MaxLogoHeight"]);
           double MaxLogoWidth = Convert.ToDouble(System.Configuration.ConfigurationManager.AppSettings["MaxLogoWidth"]);
           double MinLogoWidth = Convert.ToDouble(System.Configuration.ConfigurationManager.AppSettings["MinLogoWidth"]);
           double MinLogoHeight = Convert.ToDouble(System.Configuration.ConfigurationManager.AppSettings["MinLogoHeight"]);
           ExtCheck = ValidLogoExt.IndexOf(LogoFileExtension);

           System.Drawing.Image UploadLogo = null;

           // if any condition fails then set flag=false;


           /**************Start Code For Save Image in DB****************/
           Length = System.Convert.ToInt32(logobrowse.PostedFile.InputStream.Length);

           byte[] Content = new byte[Length];

           logobrowse.PostedFile.InputStream.Read(Content, 0, Length);

           ViewState["contentImg"] = Content;

           /**************End Code For Save Image in DB****************/

           if (!(ExtCheck == -1))
           {
               UploadLogo = System.Drawing.Image.FromStream(logobrowse.PostedFile.InputStream);
               ImgHeight = UploadLogo.Height;
               Imgwidth = UploadLogo.Width;

               if (FileSize <= Maxsize)
               {
                   if ((ImgHeight <= MaxLogoHeight) && (Imgwidth <= MaxLogoWidth) && (ImgHeight >= MinLogoHeight) && (Imgwidth >= MinLogoWidth))
                   {



                       string LogoName = null;

                       LogoName = TxtCerpacNo.Text.ToString() + LogoFileExtension;
                       LogoPath1 = LogoPath + LogoName;

                       if (File.Exists(LogoPath1))
                       {
                           File.Delete(LogoPath1);

                       }
                       //upload the photo into the server            
                       logobrowse.SaveAs(LogoPath1);

                       //compressImage(LogoPath1);
                       //ImgPhoto.ImageUrl = LogoPath1;



                       ViewState["imagepath"] = LogoName;
                       //LabelMessage.CssClass = "successmsg";
                       //LabelMessage.Text = "";

                       //Fixed the Size of the Image
                       int fixWidth = Convert.ToInt32(System.Configuration.ConfigurationManager.AppSettings["FixLogoWidth"]);
                       int fixHeight = Convert.ToInt32(System.Configuration.ConfigurationManager.AppSettings["FixLogoHeight"]);

                       if ((ImgHeight >= fixHeight) && (Imgwidth >= fixWidth))
                           compressImage(LogoPath1, fixWidth, fixHeight);

                       ImgPhoto.ImageUrl = "";
                       ImgPhoto.ImageUrl = System.Configuration.ConfigurationManager.AppSettings["LogoUrl"].ToString() + LogoName.ToString().Trim();
                       logobrowse.Visible = false;
                       btnUploadPhoto.Visible = false;
                       btnUploadCancel.Visible = true;


                   }
                   else
                   {
                       //message 

                       //LabelMessage.CssClass = "errormsg";
                       //LabelMessage.Text = "Dimension of the photo is always within (210 * 210)";
                       Response.Write("<script>alert('Dimension of the photo should be within (min)(" + MinLogoWidth + " * " + MinLogoHeight + ") and (max)(" + MaxLogoWidth + " * " + MaxLogoHeight + ")')</script>");
                       return;

                   }
               }
               else
               {
                   Response.Write("<script>alert('Please Upload photo less than 3 MB')</script>");
                   //messageflag = false;
                   //LabelMessage.CssClass = "errormsg";
                   //LabelMessage.Text = "Please Upload photo within 250kb";
                   return;

               }

           }
           else
           {
               //message
               Response.Write("<script>alert('Invalid extension of the photo,Please check the extension of photo(.jpg,.jpeg,.gif)!!')</script>");

               //LabelMessage.CssClass = "errormsg";
               //LabelMessage.Text = "Invalid extension of the photo,Please check the extension of photo(.jpg,.jpeg,.gif)!!";
               return;

           }

       }
       else
       {
           if (ImgPhoto.ImageUrl != "")
           {
               string[] LogofileName = ImgPhoto.ImageUrl.Split('\\');
               if (LogofileName.Length <= 1) { LogofileName = ImgPhoto.ImageUrl.Split('/'); }
               //ObjBalPhoto.Photo = LogofileName[LogofileName.Length - 1].ToString();
           }
           else
           {
               Response.Write("<script>alert('Please upload photo')</script>");
               //ObjBalPhoto.Photo = string.Empty;
               //LabelMessage.CssClass = "errormsg";
               //LabelMessage.Text = "Please upload photo";
               return;

           }
       }


   }

   #region Compress Original Image

   public void compressImage(string path, int width, int height)
   {


       //create a image object containing a verticel photograph
       System.Drawing.Image imgPhotoVert = System.Drawing.Image.FromFile(path);
       System.Drawing.Image imgPhoto = null;

       imgPhoto = FixedSize(imgPhotoVert, width, height);
       imgPhotoVert.Dispose();
       File.Delete(path);
       imgPhoto.Save(path);

       imgPhoto.Dispose();

   }

   #endregion

   #region Dwaw Image
   [STAThread]
   static System.Drawing.Image FixedSize(System.Drawing.Image imgPhoto, int Width, int Height)
   {
       int sourceWidth = imgPhoto.Width;
       int sourceHeight = imgPhoto.Height;
       int sourceX = 0;
       int sourceY = 0;
       int destX = 0;
       int destY = 0;
       float nPercent = 0;
       float nPercentW = 0;
       float nPercentH = 0;

       nPercentW = ((float)Width / (float)sourceWidth);
       nPercentH = ((float)Height / (float)sourceHeight);

       //if we have to pad the height pad both the top and the bottom
       //with the difference between the scaled height and the desired height
       if (nPercentH < nPercentW)
       {
           nPercent = nPercentH;
           destX = (int)((Width - (sourceWidth * nPercent)) / 2);
       }
       else
       {
           nPercent = nPercentW;
           destY = (int)((Height - (sourceHeight * nPercent)) / 2);
       }

       int destWidth = (int)(sourceWidth * nPercent);
       int destHeight = 230;// (int)(sourceHeight * nPercent);

       Bitmap bmPhoto = new Bitmap(Width, Height, PixelFormat.Format24bppRgb);
       bmPhoto.SetResolution(imgPhoto.HorizontalResolution, imgPhoto.VerticalResolution);

       Graphics grPhoto = Graphics.FromImage(bmPhoto);
       grPhoto.Clear(Color.Gray);
       grPhoto.InterpolationMode = InterpolationMode.HighQualityBicubic;

       grPhoto.DrawImage(imgPhoto,
           new Rectangle(destX, 0, destWidth, destHeight),
           new Rectangle(sourceX, sourceY, sourceWidth, sourceHeight),
           GraphicsUnit.Pixel);

       grPhoto.Dispose();
       return bmPhoto;
   }

   #endregion

   protected void btnUploadCancel_Click(object sender, EventArgs e)
   {
       ImgPhoto.ImageUrl = "~/Images/Logo/default_logo.gif";
       //ImgPhoto.ImageUrl = null;
       logobrowse.Visible = true;
       btnUploadPhoto.Visible = true;
       btnUploadCancel.Visible = false;
       ViewState["imagepath"] = null;

   }

   protected void txtcompname_TextChanged(object sender, EventArgs e)
   {
       ObjGenBal = new BaseLayer.General_function();
       string queryforcomp = "";
       if (AppID.Substring(0, 2) == "AO")
       {
           queryforcomp = "Select regno from compmaster where company = '" + txtcompname.Text.ToString() + "'";
       }
       else
       {
           queryforcomp = "Select regno from CompMasterForARCR where company = '" + txtcompname.Text.ToString() + "'";
       }
       DataTable dtcomp = new DataTable();
       try
       {
           dtcomp = ObjGenBal.FetchData(queryforcomp);
           if (dtcomp.Rows.Count > 0)
           {
               txtcompid.Text = dtcomp.Rows[0]["regno"].ToString().Trim();
               txtcompname.BorderColor = System.Drawing.Color.Black;
           }
           else
           {
               // txtcompname.Text = "";
               txtcompid.Text = "";
               txtcompname.BorderColor = System.Drawing.Color.Red;
           }
       }
       catch (Exception ex)
       {
           throw (ex);
       }
       finally
       {
           dtcomp = null;
           ObjGenBal = null;
       }
   }
}